---
const items = [
  { name: "Home", href: "#hero" },
  { name: "Sobre Nosotros", href: "#about" },
  { name: "Nuestros Productos", href: "#products" },
  { name: "Por Qué Elegirnos", href: "#why-choose-us" },
  { name: "Testimonios", href: "#testimonials" },
  { name: "Contacto", href: "#contact" },
];
---

<nav
  id="navbar-bg"
  class="fixed top-0 right-0 left-0 z-50 transition-colors duration-300"
>
  <!-- Fondo del navbar -->
  <div
    class="absolute inset-0 bg-background dark:bg-background-dark transition-all duration-300 z-10"
  >
  </div>

  <div
    class="flex items-center justify-between px-8 md:px-10 py-6 max-w-screen-xl mx-auto z-20 relative"
  >
    <a
      href="/"
      class="text-2xl md:text-3xl font-bold text-primary dark:text-primary font-primary"
    >
      🥭 Mangoland
    </a>

    <!-- Menú de escritorio -->
    <ul
      class="hidden md:flex gap-6 text-text dark:text-text-dark font-secondary"
    >
      {
        items.map((item) => (
          <li>
            <a
              href={item.href}
              class="hover:text-primary dark:hover:text-primary transition"
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>

    <!-- Íconos -->
    <div class="flex gap-4 items-center">
      <!-- Toggle de modo oscuro -->
      <button
        id="theme-toggle"
        class="text-primary dark:text-primary text-xl"
        aria-label="Toggle Dark Mode"
      >
        🌞
      </button>

      <!-- Botón para menú mobile -->
      <button
        id="menu-button"
        class="md:hidden text-primary dark:text-primary text-2xl"
        aria-label="Abrir menú"
      >
        ☰
      </button>
    </div>
  </div>

  <!-- Menú Mobile: movido fuera del contenedor relativo -->
  <ul
    id="mobile-menu"
    class="hidden absolute top-full left-0 w-full h-screen bg-surface dark:bg-surface-dark shadow-lg py-6 flex flex-col gap-6 text-center text-text dark:text-text-dark font-secondary transition-colors duration-300 md:hidden z-[60]"
  >
    {
      items.map((item) => (
        <li>
          <a
            href={item.href}
            class="hover:text-primary dark:hover:text-primary transition"
          >
            {item.name}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const navbarBg = document.getElementById("navbar-bg");
    const menuButton = document.getElementById("menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const themeToggle = document.getElementById("theme-toggle");
    const html = document.documentElement;

    if (menuButton && mobileMenu && themeToggle && html) {
      // Toggle del menú mobile
      menuButton.addEventListener("click", () => {
        if (mobileMenu.classList.contains("hidden")) {
          mobileMenu.classList.remove("hidden");
          mobileMenu.classList.add("flex");
          menuButton.textContent = "✖";
        } else {
          mobileMenu.classList.remove("flex");
          mobileMenu.classList.add("hidden");
          menuButton.textContent = "☰";
        }
      });

      // Cerrar menú mobile al hacer click en cualquier link
      const mobileLinks = mobileMenu.querySelectorAll("a");
      mobileLinks.forEach((link) => {
        link.addEventListener("click", () => {
          mobileMenu.classList.remove("flex");
          mobileMenu.classList.add("hidden");
          menuButton.textContent = "☰";
        });
      });

      // Toggle de tema (Claro/Oscuro)
      const savedTheme = localStorage.getItem("theme");
      if (savedTheme) {
        html.className = savedTheme;
        themeToggle.textContent = savedTheme === "dark" ? "🌙" : "🌞";
      }

      themeToggle.addEventListener("click", () => {
        html.classList.toggle("dark");
        html.classList.toggle("light");

        const newTheme = html.classList.contains("dark") ? "dark" : "light";
        localStorage.setItem("theme", newTheme);
        themeToggle.textContent = newTheme === "dark" ? "🌙" : "🌞";
      });

      // Agregar sombra al navbar al hacer scroll
      window.addEventListener("scroll", () => {
        if (window.scrollY > 50) {
          navbarBg.classList.add("shadow-lg");
        } else {
          navbarBg.classList.remove("shadow-lg");
        }
      });
    }
  });
</script>
